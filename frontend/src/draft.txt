


------------------

import logo from './logo.svg';
import './App.css';

function App() {
  return (
    <div className="App">
      <header className="App-header">
        <img src={logo} className="App-logo" alt="logo" />
        <p>
          Edit <code>src/App.js</code> and save to reload.
        </p>
        <a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          Learn React
        </a>
      </header>
    </div>
  );
}

export default App;






import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Dashboard from './components/Dashboard';
// import ItemList from './components/ItemList';
// import ItemDetails from './components/ItemDetails';
// import CreateItem from './components/CreateItem';
// import UpdateItem from './components/UpdateItem';

function App() {
  return (
    <Router>
      <div>
        <Routes>
          <Route path="/" element={<Dashboard />} />
          {/* <Route path="/items" element={<ItemList />} />
          <Route path="/items/:id" element={<ItemDetails />} />
          <Route path="/create" element={<CreateItem />} />
          <Route path="/update/:id" element={<UpdateItem />} /> */}
        </Routes>
      </div>
    </Router>
  );
}

export default App;



import React, { useState } from 'react';

const Dashboard = () => {
  // Dummy data for items
  const [items, setItems] = useState([
    { id: 1, name: 'Item 1', description: 'Description for Item 1' },
    { id: 2, name: 'Item 2', description: 'Description for Item 2' },
    { id: 3, name: 'Item 3', description: 'Description for Item 3' },
  ]);

  // Function to handle item deletion
  const handleDelete = (id) => {
    setItems(items.filter(item => item.id !== id));
  };

  return (
    <div className="container mx-auto px-4">
      <h1 className="text-3xl font-semibold mt-8 mb-4">Dashboard</h1>
      
      {/* Table to display items */}
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-gray-50">
          <tr>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody className="bg-white divide-y divide-gray-200">
          {items.map(item => (
            <tr key={item.id}>
              <td className="px-6 py-4 whitespace-nowrap">{item.id}</td>
              <td className="px-6 py-4 whitespace-nowrap">{item.name}</td>
              <td className="px-6 py-4 whitespace-nowrap">{item.description}</td>
              <td className="px-6 py-4 whitespace-nowrap">
                {/* Edit button */}
                <button className="text-indigo-600 hover:text-indigo-900 mr-2">Edit</button>
                {/* Delete button */}
                <button className="text-red-600 hover:text-red-900" onClick={() => handleDelete(item.id)}>Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Space to create new item */}
      <div className="mt-8">
        <h2 className="text-xl font-semibold mb-4">Create New Item</h2>
        {/* Add form or input fields for creating new items */}
      </div>
    </div>
  );
};

export default Dashboard;
